<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0110.1657                               -->
<workbook original-version='18.1' source-build='2020.3.5 (20203.21.0110.1657)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (data)' inline='true' name='federated.15mqmnv098bwrx13bo8da16fsqq6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data' name='excel-direct.1f1jvfh12lf3qr14g5o6z0r0pw0b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Desktop/BIBirbal/data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1f1jvfh12lf3qr14g5o6z0r0pw0b' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Y6683:no:A1:Y6683:0' header='yes' outcome='6'>
            <column datatype='string' name='Customer_ID' ordinal='0' />
            <column datatype='string' name='Customer_Name' ordinal='1' />
            <column datatype='date' name='Order_Date' ordinal='2' />
            <column datatype='date' name='Ship_Date' ordinal='3' />
            <column datatype='integer' name='Credit_Days' ordinal='4' />
            <column datatype='string' name='Ship_Mode' ordinal='5' />
            <column datatype='date' name='Payment_Date' ordinal='6' />
            <column datatype='string' name='Product_ID' ordinal='7' />
            <column datatype='string' name='Product_Name' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Country' ordinal='12' />
            <column datatype='string' name='Segment' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub_Category' ordinal='15' />
            <column datatype='integer' name='Quantity' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='real' name='Profit' ordinal='18' />
            <column datatype='real' name='Discount_inPercentage' ordinal='19' />
            <column datatype='string' name='Sales_Person_ID' ordinal='20' />
            <column datatype='string' name='Sales_Person_Name' ordinal='21' />
            <column datatype='string' name='Order_ID' ordinal='22' />
            <column datatype='string' name='year_month' ordinal='23' />
            <column datatype='real' name='Unit_Price' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1f1jvfh12lf3qr14g5o6z0r0pw0b' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:Y6683:no:A1:Y6683:0' header='yes' outcome='6'>
            <column datatype='string' name='Customer_ID' ordinal='0' />
            <column datatype='string' name='Customer_Name' ordinal='1' />
            <column datatype='date' name='Order_Date' ordinal='2' />
            <column datatype='date' name='Ship_Date' ordinal='3' />
            <column datatype='integer' name='Credit_Days' ordinal='4' />
            <column datatype='string' name='Ship_Mode' ordinal='5' />
            <column datatype='date' name='Payment_Date' ordinal='6' />
            <column datatype='string' name='Product_ID' ordinal='7' />
            <column datatype='string' name='Product_Name' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Country' ordinal='12' />
            <column datatype='string' name='Segment' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub_Category' ordinal='15' />
            <column datatype='integer' name='Quantity' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='real' name='Profit' ordinal='18' />
            <column datatype='real' name='Discount_inPercentage' ordinal='19' />
            <column datatype='string' name='Sales_Person_ID' ordinal='20' />
            <column datatype='string' name='Sales_Person_Name' ordinal='21' />
            <column datatype='string' name='Order_ID' ordinal='22' />
            <column datatype='string' name='year_month' ordinal='23' />
            <column datatype='real' name='Unit_Price' ordinal='24' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Y6683:no:A1:Y6683:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer_ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer_ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer_Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer_Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order_Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order_Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship_Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship_Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Credit_Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Credit_Days]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Credit_Days</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship_Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship_Mode]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Ship_Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment_Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Payment_Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Payment_Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product_ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product_ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product_Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Product_Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub_Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub_Category]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sub_Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount_inPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount_inPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Discount_inPercentage</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales_Person_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales_Person_ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales_Person_ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales_Person_Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales_Person_Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales_Person_Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order_ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order_ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year_month</remote-name>
            <remote-type>130</remote-type>
            <local-name>[year_month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year_month</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit_Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit_Price]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unit_Price</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A49E98B786D54B7CB57525AC04268B76]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Credit Days' datatype='integer' name='[Credit_Days]' role='measure' type='quantitative' />
      <column caption='Customer ID' datatype='string' name='[Customer_ID]' role='dimension' type='nominal' />
      <column caption='Customer Name' datatype='string' name='[Customer_Name]' role='dimension' type='nominal' />
      <column caption='Discount inPercentage' datatype='real' name='[Discount_inPercentage]' role='measure' type='quantitative' />
      <column caption='Order Date' datatype='date' name='[Order_Date]' role='dimension' type='ordinal' />
      <column caption='Order ID' datatype='string' name='[Order_ID]' role='dimension' type='nominal' />
      <column caption='Payment Date' datatype='date' name='[Payment_Date]' role='dimension' type='ordinal' />
      <column caption='Product ID' datatype='string' name='[Product_ID]' role='dimension' type='nominal' />
      <column caption='Product Name' datatype='string' name='[Product_Name]' role='dimension' type='nominal' />
      <column caption='Sales Person ID' datatype='string' name='[Sales_Person_ID]' role='dimension' type='nominal' />
      <column caption='Sales Person Name' datatype='string' name='[Sales_Person_Name]' role='dimension' type='nominal' />
      <column caption='Ship Date' datatype='date' name='[Ship_Date]' role='dimension' type='ordinal' />
      <column caption='Ship Mode' datatype='string' name='[Ship_Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[Unit_Price]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A49E98B786D54B7CB57525AC04268B76]' role='measure' type='quantitative' />
      <column caption='Year Month' datatype='string' name='[year_month]' role='dimension' type='nominal' />
      <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub_Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A49E98B786D54B7CB57525AC04268B76'>
            <properties context=''>
              <relation connection='excel-direct.1f1jvfh12lf3qr14g5o6z0r0pw0b' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:Y6683:no:A1:Y6683:0' header='yes' outcome='6'>
                  <column datatype='string' name='Customer_ID' ordinal='0' />
                  <column datatype='string' name='Customer_Name' ordinal='1' />
                  <column datatype='date' name='Order_Date' ordinal='2' />
                  <column datatype='date' name='Ship_Date' ordinal='3' />
                  <column datatype='integer' name='Credit_Days' ordinal='4' />
                  <column datatype='string' name='Ship_Mode' ordinal='5' />
                  <column datatype='date' name='Payment_Date' ordinal='6' />
                  <column datatype='string' name='Product_ID' ordinal='7' />
                  <column datatype='string' name='Product_Name' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='string' name='Country' ordinal='12' />
                  <column datatype='string' name='Segment' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub_Category' ordinal='15' />
                  <column datatype='integer' name='Quantity' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='real' name='Profit' ordinal='18' />
                  <column datatype='real' name='Discount_inPercentage' ordinal='19' />
                  <column datatype='string' name='Sales_Person_ID' ordinal='20' />
                  <column datatype='string' name='Sales_Person_Name' ordinal='21' />
                  <column datatype='string' name='Order_ID' ordinal='22' />
                  <column datatype='string' name='year_month' ordinal='23' />
                  <column datatype='real' name='Unit_Price' ordinal='24' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category  based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</cols>
      </table>
      <simple-id uuid='{D167B990-3622-49D7-A4EF-1B61A22818D4}' />
    </worksheet>
    <worksheet name='2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Region based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{5CA94959-B69F-4BD3-8519-68F85A1568DE}' />
    </worksheet>
    <worksheet name='3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Order Date  based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column caption='Order Date' datatype='date' name='[Order_Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order_Date]' derivation='Year' name='[yr:Order_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[yr:Order_Date:ok])</cols>
      </table>
      <simple-id uuid='{EA1F7756-5759-4F9B-A218-ACD8EEFA150D}' />
    </worksheet>
    <worksheet name='4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Segment based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[cnt:Category:qk]' />
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{07555ACB-A4CF-401F-B8ED-A2F42EF9E1EA}' />
    </worksheet>
    <worksheet name='Sub-Category  based on Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category  based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</cols>
      </table>
      <simple-id uuid='{1D2D5F48-7CCF-4CBB-9079-91ACAF53CFC4}' />
    </worksheet>
    <worksheet name='Sub-Category  based on Profit (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category  based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub_Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub_Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub_Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub_Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub_Category:nk]' member='&quot;Phones&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</cols>
      </table>
      <simple-id uuid='{B93BA0BC-8A5A-4570-B0BA-4F1E73F503B3}' />
    </worksheet>
    <worksheet name='Sub-Category/Order Date  based on Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Order Date  based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column caption='Order Date' datatype='date' name='[Order_Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order_Date]' derivation='Year' name='[yr:Order_Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[yr:Order_Date:ok])</cols>
      </table>
      <simple-id uuid='{1C861C65-D449-4702-8DA2-0B54C0804492}' />
    </worksheet>
    <worksheet name='Sub-Category/Region based on Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Region based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk])</cols>
      </table>
      <simple-id uuid='{B62C5FCA-C687-4155-82C9-1CC90740F80D}' />
    </worksheet>
    <worksheet name='Sub-Category/Segment based on Profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sub-Category/Segment based on Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (data)' name='federated.15mqmnv098bwrx13bo8da16fsqq6' />
          </datasources>
          <datasource-dependencies datasource='federated.15mqmnv098bwrx13bo8da16fsqq6'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column caption='Sub Category' datatype='string' name='[Sub_Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='Count' name='[cnt:Category:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub_Category]' derivation='None' name='[none:Sub_Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[cnt:Category:qk]' />
          <filter class='categorical' column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub_Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' direction='DESC' using='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
          <slices>
            <column>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' palette='red_blue_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk] + [federated.15mqmnv098bwrx13bo8da16fsqq6].[pcto:cum:sum:Profit:qk])</rows>
        <cols>([federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk] / [federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk])</cols>
      </table>
      <simple-id uuid='{85A858B0-A7FB-4FD0-965A-B0B281CE525F}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sub-Category  based on Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{47211E42-1702-4E25-9DCA-F57DC5E9A352}' />
    </window>
    <window class='worksheet' name='Sub-Category  based on Profit (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53BC921D-C8AF-4D78-8F0D-2D7C7DE32BB0}' />
    </window>
    <window class='worksheet' name='Sub-Category/Region based on Profit'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBBAEE1C-08EC-4EF2-BD6F-F4D2D812DFEB}' />
    </window>
    <window class='worksheet' name='Sub-Category/Order Date  based on Profit'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[yr:Order_Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C8F66B5B-3A9A-47F9-A176-967B81CA8FC1}' />
    </window>
    <window class='worksheet' name='Sub-Category/Segment based on Profit'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{334E2F5A-D89F-4EBD-9418-02A1BF0A0456}' />
    </window>
    <window class='worksheet' name='1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8ED11F8A-02D8-4496-9FB1-C6BCAA4425D0}' />
    </window>
    <window class='worksheet' name='2'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51A515B1-5AEB-43BE-B346-ED3B856048F4}' />
    </window>
    <window class='worksheet' name='3'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[yr:Order_Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DC309D5-C5A5-4702-AE5F-D1EA6E9A199E}' />
    </window>
    <window class='worksheet' name='4'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.15mqmnv098bwrx13bo8da16fsqq6].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Region:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Segment:nk]</field>
            <field>[federated.15mqmnv098bwrx13bo8da16fsqq6].[none:Sub_Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{420A3AF2-3B23-4506-A0DC-75A656D45BBC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXAc2X3fP909B2YwmBlgAAxukCAB8AKXxy7JXVLi7mq1lqJdXYnk8lFy
      dMSOE1cSuyp22akovioquVxJpVKOKyXZrpLtWFIUSbYkeyXuxV3tySUJkiBAgrjvY4DB3Fd3
      v/yB5bkrEt0cAAPO+1SximxO/97vdb/vu9+vFSGEQCIpU9TNdkAi2UykACRljRSApKyRApCU
      NVIAkpJAzyYY6O9nIZrk5qyMYCWySMG8+TthFBgdHGBibpliTN9IAUhKgp/86O9J6QZzc4vc
      Wq7f/PFzRAs3/9374g+4PJcknU7duBab7OPVc2O20nXYc1ciKS47W+p59cJljhx/nOe//wOO
      f+QRTr08jppe5tT3voHh2c7nPvEBzo0v8bkvfhqnAm8+9y1OvX6JYHs3kYU0jb5jfPe7/0Ta
      WcsnjzbwzkiSeDbHyc4AfdMJnIE2WL5EZfU2UrEoj33ocdkCSEqD6m09/MIzJ3j11Atk83my
      mTTZgo7LW82TH32G7PIUAI0VgqHFJKlUisHJWfbvqCYQ8HPwyHH82RnMmk6eevQgM1MLPPns
      Jwk48ywsJnn6mU+QW5qmoPl46iMf5Z+d2MWpHzyHIhfCJKXAxJV3eOfyFLsffgxfepy+qRgN
      LV140hMMjC/y0PGn6AhXkU9HOf3iaSpb91ERH2I5C02dPUxefIe9j53g2tuvknSFOdju4p9e
      Pk9CePjCxx/llTd66Xr4JIXYNLt378PILvG1v/y+FIDkwSQ2P8a5/nG6H3qYpprK9/z/7Eg/
      eV/L7QKIxWLkcrkNdVQIgaIoG5qmRHKdTW8BFhYWqK+v30wXJGWMHARLyhopAElZIwUgKWuk
      ACRljRSApKwp3lYIIRi89DYzkQR123twJ8YZm4+x6/AJps/8hPYPfpx6Mc93XrjKZ589+Z7b
      v/y/f0Tf8KylJP/mDz+Ht8JVrBxIypCi7gXq7DlC08oc0/MrJB01PHFyH/3XJgg01TE3PE7O
      kSAQrADANFe3+AkhMAyDmcUYw9MRS+nphoFhGMXMgqTMKJ4AFFiemWA572Dn9iYujSzckko1
      rkKUmO4m4FlN8vrygxBi9Y+dNN+9VyKxS9EEIISg71Ivwh2gYHbiyS7y0iujdB14lEJ0Br9L
      YdyoxiNWa2xN0wBQVRWHw4GdxWBN03A4bmYhnc0TT2Ut2fBXVshuVBlTNAEoisrJn/vELVea
      6b7+19pOAOoAaCxWku/hH18f4CvfeN7SPf/5C0/zyQ/2rJNHklJHzgJJyhp5IEZSVghhQiGN
      SC1BYlYKQPJgI/Q8IjqCiE8jYlOI6BgitQjZFdBcUgCSrY8QAgppyCUQ6chqQV+6hhkdh8Qs
      OFxQEUTxhVHqd6NVfwyleht4qqUAJFsXkYpgzvch5i5iRkcgFQHNjeKrRwm0onV+GCXQilIR
      BG8IxeF+jw0pAMmWQJg65FOIpWHMxQHEbC8iswyqE7XxIbRdz6IE2lD8TaC5QHWs6aCVFICk
      ZBH5NGJlHLE0iDlzHhGbBgRKaAdq26Mo4R6U6m0omtN2GlIAkpJACAGmjkgtIOb6MOcvIaJj
      kEugVDWi1O1C2/MplGAbuP0oqlaUdKUAJJuGMAqQXcGMDCLm+zAX+iEdQakMo9R0oB74RdRQ
      F0pl7br5IAUg2VCEMFenJKfexpzpRSRmQVFRarvQdj2DUrMDxd+E4qjYEH+kACTrihBidfC6
      Mo65MIA58TpkoijeGpTGg2gHfgmlZgeoGoqy8RsTpAAk64LIJRCLA5hT72AuXlkt9LVdaDue
      RGnoQfE3o6ibX/w234MSI5vXyeV1S/d4K5w4HcUZlG1VhKlDehlz7gLm9FnE8igoCkpoJ9ru
      j6M2PgSe6pIo9LdSWt6UAP/35T7+6h/PWbrnj774IY73tK+TR6WL0HOr/fmFfsyZc4jIIHiq
      Uev3oh35VZS6bhSXb7PdvCtSABJLCCEgE8WceB1z/KeI+CxKZQil5Shaz2dXuzbuqs12c81I
      AUjWhNBziOgo5vCLmFNvo1TWo7YdQ2k5ghpo2Wz3bCMFILkrIpfAnDmHOfQ8YmUCJbwXx9F/
      jRLej+LybrZ7940UgOQ9CENfnbYcfxVz7DVwelCbD+E48qtQ1YyiPjjnqKQAJDcQhQxioR/j
      2o8Ri1dXpy0P/BJq88Mo7tIezNpFCqDMEcKE1CLG+GuYo6ehkEFt6EF74j+hVG+/r41mW4Ei
      CkCg5zJEk3lqQ0GSy/PMLyepCTdhpmIEwmGc6MzOr9DYUFe8ZCW2WB3UjmFeew5z5jyKvwlt
      51Oo7SdQPNWb7d6GUcTIcLAwN8tMJElNKMDE8AiehlYcmspg30+pUp6hTUxx6q0JPveJJ4uW
      rMQawtQxJ9/CvPIjRGIGpbYLx6O/gVK/F8Xp2Wz3NpwiBsZSaGrfQTI9AOikUyki4xP4/CF8
      zV1k54aZcBhsC/sB0HX9RlS4fD5vK8BVoVAgr9089GAY1lZwAQx9Nf2bNqxHmtN1/TYbJYkQ
      EB1BufwtxMoEouUYPPLr4AujAwig1POwDqzPGMBU2HHgEbxqjt7hMYIVTqrUOItmLRXO1UJ6
      PaCVpmm4XC5bn0lyOp24XDeDWmma9exoDu0OG9a3NDgcjttslBoiMYfR/z3MqTMoTYdwPPxF
      lEDrZrtVEhQ9OO7UYpKM5qXWkaJ/LknPwYMUUjE8WjUVRiUUtv7c8VZgdRdmEnPsVYz+76N4
      a3Cc+C2Uut1FO0zyIFDULlDX/qN03XKpuePdv3hWDzSsfqtv6yyT2+XU2VHevmot0vXnPryP
      1jp/UdIXpoE58hLGlR+CWVidymx77IGf0bGDnAZdB8YXYrx9dcbSPZ8+0XXbv01TULA4HtEU
      UKNDGH3fQayMo3Y8idb1kbKa1bGKFECJMji1zO/+1ek1/lrQ5EzwxdZB9rnGUZoO4Xzqj1Cq
      GtbVxwcBKYAtTpWW5aPBQT4UGEYNtuE48nur25BLbN99qSKf0hbFpeg8VjXBZ0J95IXG/4kc
      IFD3JJ8P791s17YUUgBbDsHBylk+UT1A2JXkh8vdnI5vJ2m6+ZgM9m0ZKYAtg6DGkeEXai9y
      sHKG3lQj/3PuGEu6F7DxdREJIAWwJVAQnKga4zOhPhKGmz+eepyxXM1mu/VAIAVQ0giqHRl+
      pe48ez3z/CTWyQ+j3WTM0l113mpIAZQoGjofqBrnl+vOM1eo4ivTJxnJhTbbrQcOKYASRKQi
      tIz+Nf8qfJbvLu/lxys7Za2/TkgBlBDCyGNOvIlx4W9Z1v38t8kPMZKrRg5y1w8pgBJBJObQ
      3/gGYv4S2p5PEXcfYuTy2/dlc2hmhe+9MWTpnuN7mnhsd9N9pbuVkALYZDRMPhQcIXzpOQg1
      4Xjyv6AE21Amo/dtO57OcXEsYumezqbgfae7lZAC2DQETa4Ev1h3ic6KJRxdH8dx8NObEiC2
      nJFPexNQMflwcIQ/aHsJl2Lw+xNPMFP7uCz8m4BsATYQBcE29wpfCJ+jzpnm7xZ7eDm2DVPW
      Q5uGFMAG4VQMPlp9jU+FBriUCvPnc48wky/OARiJfaQA1h1BmzvGF8PnaHIl+Pr8Id6Mt2LI
      Wr8kkAJYRxyKwc8Fh/lkaICBdB1/NnuEhcKDGWFtqyIFsE7UOVL8euMZwq4k347s46XYNnQh
      D6OXGsVrh4UgMjNGb981TASzI/2cfuU1ltMFLr7xCisFgciv8OKr1j4+sdUQRp6Daj9f2fY8
      WdPBH02c5NTKDln4S5SitgCeqhAVK5OIQobZBBw9tIvB8UkcrgLjIws0aBEShWwxkywpRHIB
      o/dv2Ll0jr9b2sPzKx0UhGxkS5mihkWprKpCVRQwDRwVHlxuL4hFVG8jWm6OiKpRX+UGHrDI
      cPkM2Ss/Rhn4LmpVA992/Uv+KRrFyh6ewh3R5Qq69byYhnmbDd1GXgzTLP0od0WkqIGxxocu
      M3htBOGtQsRmePPtSWrb9mEm56lxZhk1mnCpi6sJPyCR4epdGeqH/hbVOYO261nU7o+h/OQy
      sGLJjvOO6HJOh/W8qJp6mw2HjSh3mqqWdJS7YlPU9jncvI2ahnY0pxt3Uz2ZvI7X68U0/KgK
      1AkFxIMRqsOhmByvnudLbVcIBdtxPPy7qx95tiFkyeZR1C5QhdfHrd/39jlXaxL13dpsdcS9
      9QeDYXeaz7cMcjgY4Tuz23nkyBc4FOq4942SkkOO0CygIjgZmuVXWq4R0118+ephBpJB9hlb
      X9TlihTAGgk5s/xa+wCHAkv8cL6Nv5neiS7KYzV3aimFlSkKp6bQENwaQZClANZAT9Uy/2Zb
      P3lT48tXD9OfDFJOp7T+x3OX0c21S6Ax6OG3n92/jh4VjzUIwCSXM3C7NHJ5A7e7fCIMa4rJ
      U7XTfL71Gq8uh/mLiW6ypqwzHiTu8TZN5icv8dypUY4da+byiMGnnzm2MZ5tMj6twOdbB3ms
      Zp5vTnfw9/PtiDKq9cuFewpgaWGB5eUFJmaqOPTIwxvj1SbT5E7x7zsuU+vM8tWh/fTGQ5RT
      l6ecuKcAhBZiR9M8U5MTqP5mtoUDG+PZJiCEyb6KGU7ufofJTCW/PXCEpULFvW+UbFnuKoD4
      wgx4K2nY/jDPHuveKJ82BWEamAP/wK65v+f/LTXwzZkO0kb5jHfKlbsKwFMVZPilb/L62Xku
      9DXRvu84Tz+6Z6N82zBENoZx/q8xZ87xE/Nx/nLS3GyXJBvEXQXg9AT5+M9/iW2tr3BlOsbu
      7vaN8muDEKgro+gvfWN1A9/J3yV+Ngmc32zHJBvEGlZyUvQPJ/noEz28/mrv+nu0QWiK4GR9
      lBOJ76D4m3E89YeotZ0g9/KUFWuY1K7k0RM9pPNOHj2ye/092gB6ggm+uGMat2oy1PRZHjn2
      NIpWPjsgJTdZQwuQZ2homtqGJlobtvbXBjVF8OGGCH9ycJDZjIvf6e1kRmuXhb+MWdOyZnTo
      LF+fGmXX/qOcPNx17xtKkEpN59/tmuCJ8DJ/OdzMtycaMIXs7mwEumHyg15rn42trXLzga66
      dfLoJncVgJ6N871vfZOI5ufZT32WlqB73R1aD+rcef5g/xA1rgK/19vJ2WW/XNXdQAwhuDQV
      s3TPtlrvhgjgrl2glblRAu1H+eRTPfS+NUA2V1h3h4rNnkCSrx/ro2Aq/MY7u3lnOSALv+QG
      d20B3L4qFoZO8/wEZLKCt/oqOXm4c6N8u08E+4MJ/nD/MJdWqvjq5e0kdLmRTXI7dy0RVbUd
      /PKXtuJJJ8Hj9VH+w65xXpyv4X8NtpbN3v0Hmb7pGMuptfdC6nwudjfdPfzkA1clKgieblzi
      t3aP8b3Jer4+1CIL/wNC/0yCkcXUmn/f3eC7pwDWrWTMjvbz8suvMD4fY6jvEhlTIMw0vRcH
      1ytJFEXwL9rm+a3dY/zFcLMs/JJ7sk6lw2QlrvPYyQ/SHg6QTUwyNB5jZWKca3ML65Ki0POc
      dJ3j1zon+e8D2/j2eIMs/JJ7sk5dIBMjl+C1l1+irfsAjmA7+fgk8w5BY2B1e3FRA2MZecSl
      b6GOvsSXL+zkjcjajywWJTDWHUGtDMP6ZrpSDoxl9c0IIW7Pi43nYZriPX6YpjU74n1s3Mn6
      CMAQBBpaqKbAXHSZSlWlWkswYTbgdiyvJlykwFhOCuhn/hyio7xY8Ulej4xh5fDK/QbGgtW8
      3G7DestTyoGxrL4ZRVFusyF060JUVeU9fqiqteeqvI+NO1kfAagO/B4nc1GDfd3b0LNpnGoL
      AeFCGDVFS0bkEui9X4N0BMfx34SLaWC8aPYlDz7rIwBFIVDXRODdhTy3bzUm/qoWi7OaHK7I
      I376VXCoOD74Oyi+euBCUWxLyoctOEoUdPgy/Okjw1R4Km8p/BKJdbbYOoBgTyDNfz00ytW4
      l65jv4nT++CeUZYUl3TeYOiOdYQtJADB4VCSPz44ypuLfv6kr5UXVHlgXbJ2kjmdV4du/wD5
      lhHA001R/uPeSX4wGeJr1xrJyHickiJQ8gJQFcEzLUv85p4p/nYkzF8NNWDIffySIlHyAvhg
      eIV/u2uGP7vSzHfG139/uKS8KHkBTKUq+P3edt5clB+VlhSfkhfAUMLDUMKz2W5IHlC24DqA
      RFI8pAAkZY0UgKSskQKQlDVSAJKyRgpAUtZIAUjKGikASVkjBSApa6QAJGWNFICkrJECkJQ1
      6yMAYXLtwls8f+oUk8sZ3nzu+8xmTMz0HN/6h5fXJUmJxA7rshtUFNKknCGeONlD/7UJgs1h
      5ocnyGsJgjWrOzuvBzm6HlSqocZHR1M1wjQRQqCq2o2ANEIIhGmiqOrN+EFCkMvl0BRxI16M
      163RXl+Foigot8SQMU0TxGrcnBs+vpuOx6neCJ4khMDrVGir83EzGo7ANM1Vm4r6vtecGuTz
      ecx3bVZVaLSEvDfSFkKg3ZEf0zRRb8mPIgwymQyKoqxex6C5xnNLOjcPAV1/drfGyRFCUOlU
      yOVyN36rYhKucr7nuZmmiaLekR/DBEXB41RuPI/rvtf5HOimePe5iXffj3ozP3dcq/Zo5HK5
      G74bJtR4VtNaTed2398vP15NkMlkbntGHs3E7xKoiopyy7NUVBVhmpji9v/z3GHD1Av4nbe8
      O1VFEXZCst0DkU9yYXienh2N9F+bxKmamIUsuuomnc1w7OHDNx7u3NwctbW1tz2M6w/zesbf
      r8Bcv3a9wFzHMIz3XLtRCG8JFPV+12Q6770G3Fc6t15br3RUVcUwDFvlZl1aAMXpxZtb5KVX
      Ruk+8Bj5lRkC7hxjeg1eEQFuqt3pdOJ2b80vz0i2PuvSAlhhYWGB+noZ10eyOchZIElZIwUg
      KWukACRljRSApKyRApCUNVIAkrJGCkBS1kgBSMoaKQBJWSMFIClrpAAkZY0UgKSskQKQlDVS
      AJKyRgpAUtZIAUjKGikASVkjBSApa6QAJGWNFICkrFk3AcSX5hgcvMZSPMPi7CwFIUAUmJ5Z
      WK8kJRLLrJMABJOjY7gqK3E5NCYuv8bwfJb0/BgvnLm8PklKJDYoelyg5EqEjNDIpFJERsbw
      9FRT2dxNbn6ESYfB9nAVsBoRTgiBYRg3IpFJJBtN0QWg6wUKumD7/oep1HL0Do8RrHBQpcZZ
      MGtxO/XVhB2rSWuahsvlKrYbEsmaKLoAgrWNBIXJzOhVBuYS9Bw8hJ5awaPVUGF6UQqVxU5S
      IrGNjAwnKWvkNKikrJECkJQ1UgCSskYKQFLWSAFIyhopAElZIwUgKWukACRljRSApKy5bSU4
      FouRy+U21IF8Pn/XvUDXv/J3N+71m+tZvPVrhXZs3O3+jbKxFjtrSedevynGc9+od3cv7pbG
      pm+FKBQKOJ3On/n/a3mZa7EBd3+ID5INXdfRNO1n/qYYfly3s9423u9zqVa5mx/r8plUK9yr
      hliL8qUNa78phh9rsVMMG2v9jV0/Nr0FuBfT4+MU9BQreTcHdu+wbkCYTE1Mkc3GyKl+9na2
      2/JjeX6GfCHD2Hya/fv34nVaHz7NT01ikmcikuNgz25cmvUXe+nsO3Q8dIhKh/3hWy65xEIk
      wfzCAtv3HSbktV67xhcn+MHpC5zY24za2ENr8O41/ftipBmbjpNcHMXXsott4WrrNvQkVy8O
      sqK4OdCzB7fD2jMt+UHw6OgA49NJlhZn7BkQJiMjfUwt6izOTdj2Y2FuivPnh3BoaVZSBVs2
      pqfHuTIwTiG/QiZv2LJRG3Dw+qtv0Ns/hGmz7srE5jlzfgCvq8DYYtqejVQS3SiwuBRFN+zl
      hVySq9cuEEsqTM0u2rORiXK6dwnDiJPK6ZZv3/Qu0L3Y1dHOcMxJTYVNA4pKS+tO6prawLD+
      gK6zffs2puIKjYEgwUp7B3jCjc20doXwOhU8Ffb6tKbQyCsaaiGJEICN3oHbF2L/oRDNtV5U
      t8+WH3Wtnfycswrh8FBX7UYIsNxT8YRo9XtQa5rw+uz5ga+Jn/90AFUVeCqsF+eSF8DgtTEy
      vkayKwk6O3fasrEyN03e4aUuGLDtx+joONF4jHRSoKTyeINuyzZEMsJwzKCjsYYKL7YK7+xi
      FDOfY2E5yx7rt69iFhgbnabK00HA6QWsi3Fu5CK9oym09DTzIsQ//9iHqHRZtJONMLuwjEur
      hXiWtnCNZT9Iz3DqxX4UPYLpb+MzH/mApdtLXgDbt7VyYXQef7jNpgWF7d27SeV0dMO07Udz
      cxOj88ssZTRafPZagJqWnRBPUdBtdhmAhw4eonp6Dm+wFs3O4FCYqG4/HW150uk0lX4b/W6g
      wltFda0HdyZPLq2hGza6Y+5qGuurGVtaoHvfQ7b8wOlje1MNyayTROEB7ALlCibNjY1U+Owe
      pRRMXbvAtNZCkBnCoSOWLRh6HrXCz5FDh0F14FTs9T2W5qZ47eoce1uCBKpr8Lmt17yJpTmi
      8QQpw0FDKGDdDz1LLJlZXe9RVAzT3jiiurGDTmeEglnLnupq3FZrfwAjh6O2i6f3ehhfthkY
      wRmgY+c2TM2F30YZKflB8PxSnK49e+hsb7JnQAgy2TzZeIR4xt4YQJgG0eUI8VSaTDaLzTJD
      Mp1BMdJEokl7BoDB0Tn2HzpAIjKFrQbN6SXoczE7OcbE6CjJgr1WcWl6mB+depmB82+zkDHt
      TVUKg6nxcWanJ1lKZGz5QWqGdy6NkslmUdYw7XonJd8C1FdXcvHcOSqqQvR0WZ/CzOsGuw8e
      o2YpRiDUYMsHh8uDU0+zbAbpbqjBYXX6Ugh0XWd71x78tY04PVV4XfbqnuawnzNvvEW+YDA4
      Ns2eHS2WbaSWpllMqxzcVsVivEBzwPp4xjQFDaEa3JUOdN1mjeAMcHj/TlI5nZ5QrU0bHrT0
      MpGlAHW1dTgsNkQl3wK43S6cDs12/z2bzZBJp8jl8mRyWdt+eIMhzMQ810YnyOvWfYlGZnnh
      +ReIp3P0nj1DKmcvP8lkivGpcZbjWbq3N9uyURXu4PEj+xDuGnaEvbZsuCoqOXDsBEcf/SAd
      tTan6LIRXj1zmWwmTTJl492YOsmcg+6H9hKqCaDZKM0lL4CRyQh79u9nZWHc1v3+qipmp6dR
      NcHM3JJtP/KpOHmcJKKL6MJiC6Ao1DW2sW9HM1lD4HA4sNFaA5DOGDTW1+GqcGJ3BTMbm6d/
      ZAahqpg2B+SKmeW1V16hr/8q8Yy9dRE0JyKbIh6Pk8nb6J4qKg6XC2+lj0qv11Y3rOS7QPv3
      7mDgwgXaO/fbMyBMkhmdnR1hxs+dI55qx19pvcaKrsSpqWsjORMjndXx2Qjm1bi9m4pEmraG
      w3hsrOQWcmnaunZRFQigqSo2FpLJpRMsRVdwVvioDYVw21jRBvDXb+PEER/C4cZnY/4dAGeA
      J594lEQ6h8fGO0FRqXAYDI6M4AqE8Pl8aOoDthJc0A28VX40bE4dKhrd3TuIL0fZ3d1N3sZU
      GUBH916chRS++m3UVtmbBu27cI5kXqegF6zX3mae82fPEYsvc/7SVZyOn73Z7W7k0kkMV4jW
      +krisSh5O9OXwOLkIJPLWSJjl5lYtrmDOBflrVde4KfvXKJ/1OZKfz5BXgmwa+c2XFYrFWGU
      vgAGBkdpam6moTZo04JgamwUQ+iMzcWoDdpbcRy6OsDy7ATXxkaJJO01+QG3g+nZOeYWljCt
      TiUZOmmcNIUbSCejpDNZ7GzjGhudINTQRHtbG7WOBKMRe4XX7fGSTcVIZk0q7bYAqkJlqJFq
      l2pLzJnYAr2Dc1CIcPbiADnLM1pqCXeB9ByDg4MYhQJ9/QN4fdW2ZoEQgmzBpM7vZ3pxyrY7
      /qpKpqM6Xc1enDb6HrlMkkDLDtRUBjS39W0Djgr2drQQWV6hc3s7kWic1sY6y340hKq4evUq
      4aCPxakkbQeszwABeIINHKxqQMFAtTOjJQSm5ufww0cwDAPNab1V9QTqObBb46enL5E3HOhC
      YCk3ilLCAlBVcukUbp+PmrpmOlutv2yESSKV5eDDh4nF4+zbtcu2OxWVAfbsdDE+l6LJaXXR
      R6BpTiq8PhwuN0JxoFrsq6Ko1DXYm/W5lfrtu/EmYuQKBqGDR/B5rRcBYeqMD17ECOzAFbuG
      Uf8QnRZnk4QwWYkusbS8TL5gUB1uoanWxlYVo8DwomBPrU5eF1jdplW6XaBsjCXh5+iBPczM
      2uwfZhY4OzCF2+OjPtzElYELtt2ZnRmn99wgipoimrK4aikEF8+8weXLA1y4dIkzZ8+StbkA
      dd8oCj5/kFAohM9rr/ankCWWzBGPzGD42uiotz6VqmfiTM3MkcnmMQzDepcQVqdBDS8ffqKT
      cHgbVW7rxbl0BeD0UusxuDo6TaVmcm3chggqaqgyFui91Efv2bepCtndTwQ7u/dx4OgR9uzY
      RZ3fYjUjBHHh5JEdfkR1J/WBCvKbJYAiMDRwhZ2HjkIuRWJhgmjG+gSFs7Ka/fv3UeVSQFHx
      +eysRyg4HA4q3B68nooHbBrU6WXfvp77s6G6OHTsOHpBX50ztrpMeAtLcxM8d2aY491hgh0H
      qfNZeHSKSldrmMFIgbAWA3+YSpvboUuBRCaLc2oIxd9IozPCUjxHrddGAU4vMp5w8VinjzOD
      4xw/0GntflWjQsQ4/c4g7Tva8fv9lqdBS1cARUJRVJxF+ABHNptDFTnml+JU77DYXCsKTe07
      sbmbqeTYf2A/E/Mr9HS1UEhUUh2wt5qMsxJnbojLQ1FyaYOFWCv1AYvrAaoDtzBQVcX69kSj
      UPpHIkuFfCZFLJFGcWgEg9U4rA5iJe9F6AxcvEjWVGju2EV9wGPdRjbKtbkcTfUBPJ4KVCvd
      ICFKeAxQYgxf6cNwV7E8NchiXH7TrChkllgs+Ni/s5HB0Ul7NlSV+OwwS9EV6wNpRZECWCtt
      bS1MDl0hbnipsbkSLLkDpw+PEeXi4CSkoyzEbGyI07y07ezCU2FjEGwUpADWyjY8P/4AAAES
      SURBVMTEFK07d+HX0iwlZAtQDAwctLe3ohfytO3ott7/BzByTE6M8crp0yRzFmejNKcUwFpp
      a2theuQqCbOSkGwB7pvM4ij/+OKbZPIG0ZygLWx3qwtomgNvpdfW7lg5CF4DQgjy2TQrkTlG
      5lMc2L8Xj50jgJIbCNMgGV9ieGiC8dk5jh5/nIYaa/u09EIOoTgQhSw4XDgdDsvdICmANXDp
      rZfIuusIimWWq/ZxdKeN6AWSn4kQJoWCgctlLbjW9OA50v4uOh1TUGtvm4vsAq2Bzp5HqKtU
      WY6nicxOkr+P6BKS96IoquXCD+ByuViYGuHKxCJXhsZsndSTLYBFCoU8qupAs3P+TlJySAFI
      ypr/D4iFZsI/LfsJAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='2' width='192'>
      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
      Nf8/VqpgxTX6dEsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3' width='192'>
      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
      mCAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sub-Category  based on Profit' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-Category  based on Profit (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-Category/Order Date  based on Profit' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sub-Category/Region based on Profit' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sub-Category/Segment based on Profit' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
