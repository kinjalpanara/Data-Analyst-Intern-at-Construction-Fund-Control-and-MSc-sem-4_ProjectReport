<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.21.0315.1017                               -->
<workbook original-version='18.1' source-build='2020.3.7 (20203.21.0315.1017)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.InequalityRelationships.true...InequalityRelationships />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' inline='true' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales-Modified-Superstore-Ver-5' name='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Dell/Desktop/BIBirbal/Sales-Modified-Superstore-Ver-5.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c' name='Sales-Data' table='[&apos;Sales-Data$&apos;]' type='table'>
          <columns gridOrigin='A1:W6683:no:A1:W6683:0' header='yes' outcome='2'>
            <column datatype='string' name='Customer ID' ordinal='0' />
            <column datatype='string' name='Customer Name' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='integer' name='Credit Days' ordinal='4' />
            <column datatype='string' name='Ship Mode' ordinal='5' />
            <column datatype='date' name='Payment Date' ordinal='6' />
            <column datatype='string' name='Product ID' ordinal='7' />
            <column datatype='string' name='Product Name' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Region' ordinal='11' />
            <column datatype='string' name='Country' ordinal='12' />
            <column datatype='string' name='Segment' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='integer' name='Quantity' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='real' name='Profit' ordinal='18' />
            <column datatype='real' name='Discount (in %)' ordinal='19' />
            <column datatype='string' name='Sales Person ID' ordinal='20' />
            <column datatype='string' name='Sales Person Name' ordinal='21' />
            <column datatype='string' name='Order ID' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c' name='Sales-Data' table='[&apos;Sales-Data$&apos;]' type='table'>
            <columns gridOrigin='A1:W6683:no:A1:W6683:0' header='yes' outcome='2'>
              <column datatype='string' name='Customer ID' ordinal='0' />
              <column datatype='string' name='Customer Name' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='integer' name='Credit Days' ordinal='4' />
              <column datatype='string' name='Ship Mode' ordinal='5' />
              <column datatype='date' name='Payment Date' ordinal='6' />
              <column datatype='string' name='Product ID' ordinal='7' />
              <column datatype='string' name='Product Name' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Region' ordinal='11' />
              <column datatype='string' name='Country' ordinal='12' />
              <column datatype='string' name='Segment' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='integer' name='Quantity' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='real' name='Profit' ordinal='18' />
              <column datatype='real' name='Discount (in %)' ordinal='19' />
              <column datatype='string' name='Sales Person ID' ordinal='20' />
              <column datatype='string' name='Sales Person Name' ordinal='21' />
              <column datatype='string' name='Order ID' ordinal='22' />
            </columns>
          </relation>
          <relation connection='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c' name='Sales-Data1' table='[&apos;Sales-Data$&apos;]' type='table'>
            <columns gridOrigin='A1:W6683:no:A1:W6683:0' header='yes' outcome='2'>
              <column datatype='string' name='Customer ID' ordinal='0' />
              <column datatype='string' name='Customer Name' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='integer' name='Credit Days' ordinal='4' />
              <column datatype='string' name='Ship Mode' ordinal='5' />
              <column datatype='date' name='Payment Date' ordinal='6' />
              <column datatype='string' name='Product ID' ordinal='7' />
              <column datatype='string' name='Product Name' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Region' ordinal='11' />
              <column datatype='string' name='Country' ordinal='12' />
              <column datatype='string' name='Segment' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='integer' name='Quantity' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='real' name='Profit' ordinal='18' />
              <column datatype='real' name='Discount (in %)' ordinal='19' />
              <column datatype='string' name='Sales Person ID' ordinal='20' />
              <column datatype='string' name='Sales Person Name' ordinal='21' />
              <column datatype='string' name='Order ID' ordinal='22' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category (Sales-Data1)]' value='[Sales-Data1].[Category]' />
          <map key='[Category]' value='[Sales-Data].[Category]' />
          <map key='[City (Sales-Data1)]' value='[Sales-Data1].[City]' />
          <map key='[City]' value='[Sales-Data].[City]' />
          <map key='[Country (Sales-Data1)]' value='[Sales-Data1].[Country]' />
          <map key='[Country]' value='[Sales-Data].[Country]' />
          <map key='[Credit Days (Sales-Data1)]' value='[Sales-Data1].[Credit Days]' />
          <map key='[Credit Days]' value='[Sales-Data].[Credit Days]' />
          <map key='[Customer ID (Sales-Data1)]' value='[Sales-Data1].[Customer ID]' />
          <map key='[Customer ID]' value='[Sales-Data].[Customer ID]' />
          <map key='[Customer Name (Sales-Data1)]' value='[Sales-Data1].[Customer Name]' />
          <map key='[Customer Name]' value='[Sales-Data].[Customer Name]' />
          <map key='[Discount (in %) (Sales-Data1)]' value='[Sales-Data1].[Discount (in %)]' />
          <map key='[Discount (in %)]' value='[Sales-Data].[Discount (in %)]' />
          <map key='[Order Date (Sales-Data1)]' value='[Sales-Data1].[Order Date]' />
          <map key='[Order Date]' value='[Sales-Data].[Order Date]' />
          <map key='[Order ID (Sales-Data1)]' value='[Sales-Data1].[Order ID]' />
          <map key='[Order ID]' value='[Sales-Data].[Order ID]' />
          <map key='[Payment Date (Sales-Data1)]' value='[Sales-Data1].[Payment Date]' />
          <map key='[Payment Date]' value='[Sales-Data].[Payment Date]' />
          <map key='[Product ID (Sales-Data1)]' value='[Sales-Data1].[Product ID]' />
          <map key='[Product ID]' value='[Sales-Data].[Product ID]' />
          <map key='[Product Name (Sales-Data1)]' value='[Sales-Data1].[Product Name]' />
          <map key='[Product Name]' value='[Sales-Data].[Product Name]' />
          <map key='[Profit (Sales-Data1)]' value='[Sales-Data1].[Profit]' />
          <map key='[Profit]' value='[Sales-Data].[Profit]' />
          <map key='[Quantity (Sales-Data1)]' value='[Sales-Data1].[Quantity]' />
          <map key='[Quantity]' value='[Sales-Data].[Quantity]' />
          <map key='[Region (Sales-Data1)]' value='[Sales-Data1].[Region]' />
          <map key='[Region]' value='[Sales-Data].[Region]' />
          <map key='[Sales (Sales-Data1)]' value='[Sales-Data1].[Sales]' />
          <map key='[Sales Person ID (Sales-Data1)]' value='[Sales-Data1].[Sales Person ID]' />
          <map key='[Sales Person ID]' value='[Sales-Data].[Sales Person ID]' />
          <map key='[Sales Person Name (Sales-Data1)]' value='[Sales-Data1].[Sales Person Name]' />
          <map key='[Sales Person Name]' value='[Sales-Data].[Sales Person Name]' />
          <map key='[Sales]' value='[Sales-Data].[Sales]' />
          <map key='[Segment (Sales-Data1)]' value='[Sales-Data1].[Segment]' />
          <map key='[Segment]' value='[Sales-Data].[Segment]' />
          <map key='[Ship Date (Sales-Data1)]' value='[Sales-Data1].[Ship Date]' />
          <map key='[Ship Date]' value='[Sales-Data].[Ship Date]' />
          <map key='[Ship Mode (Sales-Data1)]' value='[Sales-Data1].[Ship Mode]' />
          <map key='[Ship Mode]' value='[Sales-Data].[Ship Mode]' />
          <map key='[State (Sales-Data1)]' value='[Sales-Data1].[State]' />
          <map key='[State]' value='[Sales-Data].[State]' />
          <map key='[Sub-Category (Sales-Data1)]' value='[Sales-Data1].[Sub-Category]' />
          <map key='[Sub-Category]' value='[Sales-Data].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W6683:no:A1:W6683:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:W6683:no:A1:W6683:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Credit Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Credit Days]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Credit Days</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Payment Date]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Payment Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount (in %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount (in %)]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Discount (in %)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Person ID]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Sales Person ID</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Person Name]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Sales Person Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Sales-Data]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>25</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Credit Days</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Credit Days (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Credit Days</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Payment Date (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Payment Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount (in %)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount (in %) (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Discount (in %)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Person ID (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Sales Person ID</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Person Name (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Sales Person Name</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Sales-Data1)]</local-name>
            <parent-name>[Sales-Data1]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column datatype='string' name='[City (Sales-Data1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country (Sales-Data1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (Sales-Data1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales-Data' datatype='table' name='[__tableau_internal_object_id__].[Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sales-Data1' datatype='table' name='[__tableau_internal_object_id__].[Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sales-Data' id='Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6'>
            <properties context=''>
              <relation connection='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c' name='Sales-Data' table='[&apos;Sales-Data$&apos;]' type='table'>
                <columns gridOrigin='A1:W6683:no:A1:W6683:0' header='yes' outcome='2'>
                  <column datatype='string' name='Customer ID' ordinal='0' />
                  <column datatype='string' name='Customer Name' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='integer' name='Credit Days' ordinal='4' />
                  <column datatype='string' name='Ship Mode' ordinal='5' />
                  <column datatype='date' name='Payment Date' ordinal='6' />
                  <column datatype='string' name='Product ID' ordinal='7' />
                  <column datatype='string' name='Product Name' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='string' name='Country' ordinal='12' />
                  <column datatype='string' name='Segment' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='integer' name='Quantity' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='real' name='Profit' ordinal='18' />
                  <column datatype='real' name='Discount (in %)' ordinal='19' />
                  <column datatype='string' name='Sales Person ID' ordinal='20' />
                  <column datatype='string' name='Sales Person Name' ordinal='21' />
                  <column datatype='string' name='Order ID' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sales-Data1' id='Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3'>
            <properties context=''>
              <relation connection='excel-direct.18bt6ap0cxw3o91h42xsj062vt7c' name='Sales-Data1' table='[&apos;Sales-Data$&apos;]' type='table'>
                <columns gridOrigin='A1:W6683:no:A1:W6683:0' header='yes' outcome='2'>
                  <column datatype='string' name='Customer ID' ordinal='0' />
                  <column datatype='string' name='Customer Name' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='integer' name='Credit Days' ordinal='4' />
                  <column datatype='string' name='Ship Mode' ordinal='5' />
                  <column datatype='date' name='Payment Date' ordinal='6' />
                  <column datatype='string' name='Product ID' ordinal='7' />
                  <column datatype='string' name='Product Name' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Region' ordinal='11' />
                  <column datatype='string' name='Country' ordinal='12' />
                  <column datatype='string' name='Segment' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='integer' name='Quantity' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='real' name='Profit' ordinal='18' />
                  <column datatype='real' name='Discount (in %)' ordinal='19' />
                  <column datatype='string' name='Sales Person ID' ordinal='20' />
                  <column datatype='string' name='Sales Person Name' ordinal='21' />
                  <column datatype='string' name='Order ID' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Order ID]' />
                <expression op='[Order ID (Sales-Data1)]' />
              </expression>
              <expression _.fcp.InequalityRelationships.false...op='=' _.fcp.InequalityRelationships.true...op='&lt;'>
                <expression _.fcp.InequalityRelationships.false...op='[Sub-Category &lt; Sub-Category (Sales-Data1)]' _.fcp.InequalityRelationships.true...op='[Sub-Category]' />
                <expression _.fcp.InequalityRelationships.false...op='[]' _.fcp.InequalityRelationships.true...op='[Sub-Category (Sales-Data1)]' />
              </expression>
            </expression>
            <first-end-point object-id='Sales-Data_45A898446F6C40BF889AB7DA3FED3AD6' />
            <second-end-point object-id='Sales-Data_7B15BF4E6BDC44B4A0493CFCD7B068B3' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Full data'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Profit:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{9D7B4FE2-6896-41B7-9D02-8A06195B85C6}' />
    </worksheet>
    <worksheet name='Full data (Profit Label)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Profit:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[pcto:sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{FA77AFEB-CBBB-4B27-B431-2D7B5DC1D294}' />
    </worksheet>
    <worksheet name='for 2016'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{E74E49B3-6F3D-4DBD-A433-85EB16945D10}' />
    </worksheet>
    <worksheet name='for 2017'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{F7E936FD-2D23-4CC8-AC1D-3DFBED4D8FC4}' />
    </worksheet>
    <worksheet name='for 2018'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{E5949E64-9D94-4792-97CF-B7E0A3B5EAD0}' />
    </worksheet>
    <worksheet name='for Central'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{AB8AB791-5E52-4232-97B0-9B90483B4A8B}' />
    </worksheet>
    <worksheet name='for East'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;East&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{29B655CB-8AA9-4844-824F-11EC688092E6}' />
    </worksheet>
    <worksheet name='for North'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;North&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{325E938A-56C6-4A84-B04E-B2A8A7AA5B22}' />
    </worksheet>
    <worksheet name='for South'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;South&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{0EE0598D-CFA4-4E6F-B73A-3CE95C5A3033}' />
    </worksheet>
    <worksheet name='for West'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Market Basket Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='SalesData+ (Sales_Modified_Superstore_Ver_5)' name='federated.1lk9v4i19lr0891bwo9ea0n4x683' />
          </datasources>
          <datasource-dependencies datasource='federated.1lk9v4i19lr0891bwo9ea0n4x683'>
            <column caption='Profit Ratio' datatype='real' default-format='p0%' name='[Calculation_863565245228347392]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
            </column>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column caption='Region1' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (Sales-Data1)]' role='dimension' type='nominal' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category (Sales-Data1)]' derivation='None' name='[none:Sub-Category (Sales-Data1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_863565245228347392]' derivation='User' name='[usr:Calculation_863565245228347392:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]'>
            <groupfilter function='member' level='[none:Region:nk]' member='&quot;West&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Art&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Copiers&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Fasteners&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Labels&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Machines&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Paper&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Phones&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Storage&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Supplies&quot;' />
              <groupfilter function='member' level='[none:Sub-Category (Sales-Data1):nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
              <groupfilter function='empty-level' member='[none:Sub-Category:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</column>
            <column>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' />
              <tooltip column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[usr:Calculation_863565245228347392:qk]' />
              <text column='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[ctd:Order ID:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</rows>
        <cols>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{E35DAE24-C203-4757-AE5B-777C980D46DD}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Full data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D61C31C-FF47-45B4-96ED-0D6E3B7CBB61}' />
    </window>
    <window class='worksheet' maximized='true' name='Full data (Profit Label)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0EC7F71-FCF1-42E6-8F6D-B9494EF6F267}' />
    </window>
    <window class='worksheet' name='for 2016'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7362D64A-CFCA-486F-B26C-DB69858A600F}' />
    </window>
    <window class='worksheet' name='for 2017'>
      <cards>
        <edge name='left'>
          <strip size='198'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE7B6587-1926-41E6-8B6B-B27590FB7C0B}' />
    </window>
    <window class='worksheet' name='for 2018'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A454F30B-7767-435E-A704-E52A3FCEC563}' />
    </window>
    <window class='worksheet' name='for East'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE4231A8-A275-4160-9909-CE730B6DD67C}' />
    </window>
    <window class='worksheet' name='for West'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{51A338C7-0CE3-4C4F-9E22-15234CE0AD0D}' />
    </window>
    <window class='worksheet' name='for South'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D79D27D2-00EB-477B-B578-C8A0E74B4D47}' />
    </window>
    <window class='worksheet' name='for North'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C32E8D27-14F4-47F4-A1B2-EBCDDCA6E3B8}' />
    </window>
    <window class='worksheet' name='for Central'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lk9v4i19lr0891bwo9ea0n4x683].[sum:Quantity:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Order ID:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Region:nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (Sales-Data1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category (SalesData1):nk]</field>
            <field>[federated.1lk9v4i19lr0891bwo9ea0n4x683].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AE49DB4-5FD0-479F-BA44-A5377B44759E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Full data' width='192'>
      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
      RrtDHOB/AGoPygk94zknAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Full data (Profit Label)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for 2016' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for 2017' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for 2018' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for Central' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for East' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='for North' width='192'>
      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
      odFeSAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='for South' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='for West' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
